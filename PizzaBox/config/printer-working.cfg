# This file contains common pin mappings for the BIGTREETECH SKR V1.4
# board. To use this config, the firmware should be compiled for the
# LPC1768 or LPC1769(Turbo).

# See docs/Config_Reference.md for a description of parameters.
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_350009000650534E4E313120-if00
#serial: /dev/ttyACM0
#restart_method: command

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

[temperature_sensor Octopusie]
sensor_type: temperature_mcu
sensor_mcu: mcu

[gcode_arcs]
resolution: 1.0

[printer]
kinematics: corexy
max_velocity: 800 ;700
max_accel: 25000 ;25000
max_accel_to_decel: 25000 ;25000
max_z_velocity: 25 ;50
max_z_accel: 500
square_corner_velocity: 5

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    150,150,20  # an example

[input_shaper]
shaper_freq_x: 68.2
shaper_freq_y: 42
shaper_type: mzv

#ZV         0.5 / shaper_freq	N/A	± 5% shaper_freq
#MZV	    0.75 / shaper_freq	± 4% shaper_freq	-10%...+15% shaper_freq
#ZVD	    1 / shaper_freq	± 15% shaper_freq	± 22% shaper_freq
#EI         1 / shaper_freq	± 20% shaper_freq	± 25% shaper_freq
#2HUMP_EI	1.5 / shaper_freq	± 35% shaper_freq	± 40 shaper_freq
#3HUMP_EI	2 / shaper_freq	-45...+50% shaper_freq	-50%...+55% shaper_freq

[probe]
pin: PG10
#z_offset: 1.075 # lower value will increase head distance 0.93 for PEI, 1.30 for textured
y_offset: -23.4
x_offset: -17
lift_speed: 165
speed: 15
samples: 4
samples_result: average
sample_retract_dist: 2.0
samples_tolerance: 0.1
samples_tolerance_retries: 3

[bed_mesh]
speed: 700
horizontal_move_z: 3
mesh_min: 40,30
mesh_max: 282, 275
probe_count: 6,6

#[temperature_sensor PI_temp]
#sensor_type: temperature_host

[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
endstop_pin: PG6
rotation_distance: 40
microsteps: 32
position_min: -1
position_endstop: -1
position_max: 301
homing_speed: 100   #Max 100
homing_retract_dist: 3
homing_positive_dir: false


[tmc2209 stepper_x]
uart_pin: PC4
interpolate: False
run_current: 1.40 ;1.30
#hold_current: 0.20
sense_resistor: 0.110
stealthchop_threshold: 1

[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
endstop_pin: PG9
rotation_distance: 40
microsteps: 32
position_min: 0
position_endstop: 316
position_max: 316
homing_speed: 100   #Max 100
homing_retract_dist: 3
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: False
run_current: 1.40 ;1.30
#hold_current: 0.20
sense_resistor: 0.110
stealthchop_threshold: 1

[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 4
microsteps: 32
endstop_pin: probe:z_virtual_endstop
position_max: 101
position_min: -1
homing_speed: 25   #Max 100
second_homing_speed: 5.0
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: False
run_current: 1.2 ;1.20
;hold_current: 0.200
sense_resistor: 0.110
stealthchop_threshold: 99999

[extruder]
step_pin: PG4
dir_pin: PC1
enable_pin: !PA0
heater_pin: PA2
sensor_pin: PF4
rotation_distance: 24.50 #lower value will extrude more
gear_ratio: 5:1 #50:17
microsteps: 64
nozzle_diameter: 0.400
filament_diameter: 1.750
sensor_type: ATC Semitec 104NT-4-R025H42G
control: pid
pid_Kp: 23 ;22.5
pid_Ki: 0.6 ;1.0
pid_Kd: 70 ;70
min_temp: 0
max_temp: 300
min_extrude_temp: 180
max_extrude_only_distance: 500.0
max_extrude_cross_section: 10
max_extrude_only_velocity: 40
max_extrude_only_accel: 5000
Pressure_advance: 0.022
pressure_advance_smooth_time: 0.015

[tmc2209 extruder]
uart_pin: PC7
#uart_address: 0
interpolate: False
run_current: 0.4
hold_current: 0.1
sense_resistor: 0.110
stealthchop_threshold: 1

#[firmware_retraction]
#retract_length: 0.5 #   G10 and G11
#retract_speed: 80 #   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0 #   The length (in mm) of *additional* filament to add when unretracting.
#unretract_speed: 40 #   The speed of unretraction, in mm/s. The default is 10 mm/s.

[heater_bed]
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F ;ATC Semitec 104GT-2
sensor_pin: PF7
smooth_time: 2.0
max_power: 1.0
#control: pid
pwm_cycle_time: 0.016666
min_temp: 0
max_temp: 115
#pid_kp: 58.437 ;58
#pid_ki: 2.35 ;2.35
#pid_kd: 200 ;200

[verify_heater heater_bed]  
heating_gain: 2 
check_gain_time:120  
hysteresis: 10  
max_error: 130 

[temperature_sensor pad_actual]
sensor_type: ATC Semitec 104GT-2
sensor_pin: PF3
min_temp: 0
max_temp: 160

#[temperature_sensor pad_corner]
#sensor_type: EPCOS 100K B57560G104F
#sensor_pin: PF5
#min_temp: 0
#max_temp: 160


[heater_fan hotend_fan]
pin: PA8
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 80.0


[fan]
pin: PD13
max_power: 1.0
kick_start_time: 0.25
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
off_below: 0.07
cycle_time: 0.020

#[fan_generic fan_blower]
#pin: P2.5
#max_power: 1.0
#kick_start_time: 0.5
#off_below: 0.15
#cycle_time: 0.020

[idle_timeout]
gcode: 
    PRINTER_IDLE
    
timeout: 3600

#[safe_z_home]
#home_xy_position: 60,60 # Change coordinates to the center of your print bed
#speed: 100
#z_hop: 5                 # Move up 5mm
#z_hop_speed: 10

[homing_override]
set_position_x:0
set_position_y:0
set_position_z:0
gcode:
    SET_VELOCITY_LIMIT ACCEL=5000
    G0 Z2
    #SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.300
    G28 X
    G28 Y
    #HomeWiperArm
    G90
    G0 X165 Y165 F7200
    G28 Z
    #SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.75
    #SET_VELOCITY_LIMIT ACCEL={{printer.configfile.settings.printer.max_accel if printer.configfile.settings.printer.max_accel <25000 else 12000}}
    _SET_SAFE_ACCEL
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=park_y VALUE={printer.configfile.config["stepper_y"]["position_max"]|float-1}
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=park_z VALUE={printer.configfile.config["stepper_z"]["position_max"]|float-1}
    G0 Z40 F7200
    PARK_XY
    #G0 Z20
#   A list of G-Code commands to execute in place of G28 commands
#   found in the normal g-code input. See docs/Command_Templates.md
#   then it will invoke the normal homing procedure for the printer.
#   The commands listed here must home all axes. This parameter must
#   be provided.
axes: xyz

[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".
[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
contrast: 63
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
## Some micro-controller boards may require an spi bus to be specified:
spi_bus: spi1
## Alternatively, some micro-controller boards may work with software spi:
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

[output_pin beeper]
pin: EXP1_1

[neopixel fysetc_mini12864]
pin: EXP1_6
chain_count: 3
color_order: RGB
initial_RED: 1
initial_GREEN: 1
initial_BLUE: 1


#--------------------------------------------------------------------

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5


[gcode_macro M106]
rename_existing: M1069713

gcode:
    #SET_FAN_SPEED FAN=fan_blower SPEED={params.S|float / 255}
    M1069713 S{params.S} 


[gcode_macro PRINTER_IDLE]
gcode:
    TURN_OFF_HEATERS
    #TURN_OFF_LIGHTS
    #TURN_OFF_FANS
    #SET_PIN PIN=HTR_MAIN VALUE=0
    M84
    
[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}

# =============== GLOBAL_VARS =================================================================================================================
# =============== GLOBAL_VARS =================================================================================================================  
# =============== GLOBAL_VARS =================================================================================================================  
# =============== GLOBAL_VARS =================================================================================================================  
[gcode_macro GLOBAL_VARS]
variable_idletimeout: 3600
variable_current_x: 0
variable_current_y: 0
variable_current_z: 0
variable_park_x: 17
variable_park_y: 0
variable_park_z: 0
variable_fan_lock: 0
variable_fan_lock_val: 0
variable_fan_last: 0
gcode:


# =============== PRINT_START =================================================================================================================    
# =============== PRINT_START =================================================================================================================
# =============== PRINT_START =================================================================================================================
# =============== PRINT_START =================================================================================================================
[gcode_macro PRINT_START]
gcode:
    {% set paramAreaStart = params.AREA_START%}
    {% set paramAreaEnd = params.AREA_END%}
    {% set new_hotend = params.HOTEND|float %}
    {% set new_bed = params.BED|float %}
    M106 S0 ;  part fan 0
    LockFanDisabled
    _SET_SAFE_ACCEL
    M220 S100; reset speed
    M221 S100; reset flow
    M104 S200 ; set and do not wait
    M140 S{new_bed} ; set and do not wait
    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    G28 ; home xyz
    PARK_XY
    RESPOND TYPE=command MSG="WAITING FOR BED"
    {% if printer.heater_bed.temperature+5 > new_bed %}
      M140 S{new_bed} ; set and do not wait if bed is within 5 or above
    {% else %}
      M190 S{new_bed} ; set and wait before MESH CAL
    {% endif %}
    
    {% if printer.extruder.can_extrude %}
        G92 E0
        G1 E-5 ;pull back all filament to prevent drops on the bed while MESH CAL is running
        G92 E0
    {% endif %} 
    _WIPE_COMMAND ;clean the nozzle
    BED_MESH_CALIBRATE AREA_START={paramAreaStart} AREA_END={paramAreaEnd} ; BED MESH using AREA START x/y and AREA END xy sent from the slicer
    PARK_XY
    G0 Z1 ; move to purge position at rear Y-1
    RESPOND TYPE=command MSG="WAITING FOR HOTEND"
    M109 S{new_hotend} ; set and wait for hotend
    BEEP
    M83 ;Extruder relative
    G92 E0.0 ; zero out E
    G1 E10 F300.0 ; purge long
    G1 E5 F50.0 ; purge slow
    G92 E0.0 ; zero out E
    G1 E-1 F3000 ;retract
    _WIPE_COMMAND ;clean the nozzle
    _SET_SAFE_ACCEL
    RESPOND TYPE=command MSG="GO TIME!"
    G1 E0.8 F3000 ;retract

[gcode_macro PRINT_START_HOT]
gcode:
    M220 S100; reset speed
    M221 S100; reset flow
    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    M83 ;Extruder relative
    _WIPE_COMMAND ;clean the nozzle

[gcode_macro BEEP]
gcode:
    SET_PIN PIN=beeper VALUE=1
    G4 P200
    SET_PIN PIN=beeper VALUE=0
    G4 P200
    SET_PIN PIN=beeper VALUE=1
    G4 P200
    SET_PIN PIN=beeper VALUE=0

# =============== CLEAN_NOZZLE ==========================================================================================================
# =============== CLEAN_NOZZLE ==========================================================================================================
# =============== CLEAN_NOZZLE ==========================================================================================================
# =============== CLEAN_NOZZLE ==========================================================================================================
[gcode_macro CLEAN_NOZZLE]
gcode:
    {% if printer.idle_timeout.state != "Idle" %}
        PAUSE
        _WIPE_COMMAND
        RESUME
    {% else %}
        RESPOND TYPE=error MSG="NOT PRINTING"
    {% endif %}

;[gcode_macro _CLEAN_NOZZLE]
;gcode:;use this gcode in the slicer to clean the nozzle mid print
;use only from gcode during a print, not from the console or macro panel (it's hidden)
;not using pause or set gcode states to ensure we can override all speeds and accelerations to get to the pad and back with no oozing
    ;SAVE_GCODE_STATE NAME=CLEAN_state
    ;{% set current_z = printer.toolhead.position.z|float %} ; grab current Z
    ;{% set current_x = printer.toolhead.position.x|float %} ; grab current X
    ;{% set current_y = printer.toolhead.position.y|float %} ; grab current Y
    ;{% set current_f = printer.gcode_move.speed|float %} ; grab last set Feed speed
    ;{% set current_a = printer.toolhead.max_accel|float %} ; grab last set accelerate speed
    ;_SET_SAFE_ACCEL
    ;M83
    ;G1 E-1.0 F3000 ;retract
    ;G91
    ;G0 Z1 ; move Z up 1, relative
    ;G90
    ;_WIPE_COMMAND
    ;G0 X{current_x} Y{current_y} F50000
    ;G0 Z{current_z} F10000
    ;SET_VELOCITY_LIMIT ACCEL=2000 ;set low incase the gcode doesn't set the appropriate acceleration just prior to extruding the next line
    ;G92 E0.0 ; zero out E
    ;G1 E0.85 F1200 ;detract
    ;G92 E0.0 ; zero out E
    ;RESTORE_GCODE_STATE NAME=CLEAN_state ; MOVE=1


[gcode_macro M204]
# prevent slicers from overriding the printer.cfg machine limits
rename_existing: M204999
gcode:
    {% if params.S %}
        {% if params.S|float > printer.configfile.settings.printer.max_accel %} ; check z, move +10 if not less than 10 of max z
            ;SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel}
        {% else %}
            ;SET_VELOCITY_LIMIT ACCEL={params.S} ACCEL_TO_DECEL={params.S}
        {% endif %}
    {% endif %}

#[gcode_macro G1]
#; intercept all G1 commands that are faster than 400mm/s and set travel acceleration
#rename_existing: G100999
#gcode:
#    {% if params.F %}
#        {% if params.F|float> 24000 %} 
#           _SET_TRAVEL_ACCEL
#        {% endif %}
#    {% endif %}
#    G100999 { rawparams }

[gcode_macro M106]
rename_existing: M106999
gcode:
    {% set fan_lock = printer["gcode_macro GLOBAL_VARS"].fan_lock|float %}
    {% set fan_lock_val = printer["gcode_macro GLOBAL_VARS"].fan_lock_val %}
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=fan_last VALUE={params.S}
    {% if fan_lock > 0 %}
        M106999 S{fan_lock_val}
    {% else %}
        M106999 S{params.S}
    {% endif %}

[gcode_macro LockFanDisabled]
gcode:
    {% set fan_last = printer["gcode_macro GLOBAL_VARS"].fan_last %}
    M106999 S{fan_last}
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=fan_lock VALUE=0
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=fan_lock_val VALUE=0

[gcode_macro LockFanAt0]
gcode:
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=fan_lock VALUE=1
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=fan_lock_val VALUE=0
    M106999 S0

[gcode_macro LockFanAt10]
gcode:
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=fan_lock VALUE=1
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=fan_lock_val VALUE=26
    M106999 S26

[gcode_macro LockFanAt25]
gcode:
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=fan_lock VALUE=1
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=fan_lock_val VALUE=64
    M106999 S64

[gcode_macro LockFanAt50]
gcode:
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=fan_lock VALUE=1
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=fan_lock_val VALUE=128
    M106999 S128

[gcode_macro LockFanAt100]
gcode:
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=fan_lock VALUE=1
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=fan_lock_val VALUE=256
    M106999 S256
    


# =============== M600 ========================================================================================================================
# =============== M600 ======================================================================================================================== 
# =============== M600 ======================================================================================================================== 
# =============== M600 ======================================================================================================================== 
[gcode_macro M600]
gcode:
    PAUSE
    G1 E5 F500
    G1 E-10 F2000
    G1 E-75 F1000
    _WIPE_COMMAND
    RESPOND TYPE=command MSG="REPLACE FILAMENT AND RUN LOAD_FILAMENT_RESUME"

# =============== PRINT_END =================================================================================================================
# =============== PRINT_END =================================================================================================================
# =============== PRINT_END =================================================================================================================
# =============== PRINT_END =================================================================================================================
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M221 S100 ; clear speed and flow
    M220 S100 ;
    _SET_SAFE_ACCEL
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    {% if printer.extruder.can_extrude %}
        G1 E-4.0 F3600   ; retract filament
    {% endif %}
    G90  
    PARK_ALL
    _WIPE_COMMAND
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=100
    M107                           ; turn off fan
    M84

[gcode_macro PRINT_END_HOT]
gcode:
    M221 S100 ; clear speed and flow
    M220 S100 ;
    _SET_SAFE_ACCEL
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    {% if printer.extruder.can_extrude %}
        G1 E-4.0 F3600   ; retract filament
    {% endif %}
    G90  
    PARK_ALL
    _WIPE_COMMAND
    M107                           ; turn off fan

[gcode_macro ACCEL_LIMIT_EXTPERIM]
gcode:
    SET_VELOCITY_LIMIT ACCEL=3000 ACCEL_TO_DECEL=3000
    SET_PRESSURE_ADVANCE ADVANCE=0.0400
    SET_PRESSURE_ADVANCE SMOOTH_TIME=0.0300

[gcode_macro ACCEL_LIMIT_PERIM]
gcode:
    SET_VELOCITY_LIMIT ACCEL=6000 ACCEL_TO_DECEL=6000
    SET_PRESSURE_ADVANCE ADVANCE=0.0300
    SET_PRESSURE_ADVANCE SMOOTH_TIME=0.0225

[gcode_macro ACCEL_LIMIT_NONE]
gcode:
    {% set printer_settings_accel = printer.configfile.settings.printer.max_accel %}
    SET_VELOCITY_LIMIT ACCEL={printer_settings_accel} ACCEL_TO_DECEL={printer_settings_accel}
    SET_PRESSURE_ADVANCE ADVANCE=0.0200
    SET_PRESSURE_ADVANCE SMOOTH_TIME=0.0150

[gcode_macro ACCEL_LIMIT_IFX_PANELS]
gcode:
    ACCEL_LIMIT_EXTPERIM

[gcode_macro FEEDBASE_IFX_PANELS]
gcode:
    M220 S200;


[gcode_macro FEEDHEX_IFX_PANELS]
gcode:
    M220 S200;


[gcode_macro FEEDTOP_IFX_PANELS]
gcode:
    M220 S150;

[gcode_macro FEEDFINISH_IFX_PANELS]
gcode:
    M220 S100;

[gcode_macro _SET_SAFE_ACCEL]
gcode:
    M220 S100
    SET_VELOCITY_LIMIT ACCEL=25000 ACCEL_TO_DECEL=25000    

[gcode_macro PARK_XY]
gcode:
    {% set park_x = printer["gcode_macro GLOBAL_VARS"].park_x %}
    {% set park_y = printer["gcode_macro GLOBAL_VARS"].park_y %}
    G90  
    G0 X{park_x} Y{park_y} F40000    ; move nozzle to remove stringing

[gcode_macro MAINTENANCE_PARK]
gcode:
    {% set park_z = printer["gcode_macro GLOBAL_VARS"].park_z %}
    G90
    G0 Z{park_z} F40000    ; move nozzle to remove stringing
    G0 X{150} Y{0} F40000    ; move nozzle to remove stringing

[gcode_macro PARK_ALL]
gcode:
    {% set park_x = printer["gcode_macro GLOBAL_VARS"].park_x %}
    {% set park_y = printer["gcode_macro GLOBAL_VARS"].park_y %}
    {% set park_z = printer["gcode_macro GLOBAL_VARS"].park_z %}
    G90
    G0 Z{park_z} F40000    ; move nozzle to remove stringing
    G0 X{park_x} Y{park_y} F40000    ; move nozzle to remove stringing

[gcode_macro SILENT_MODE]
gcode:
    SET_VELOCITY_LIMIT VELOCITY=125

[gcode_macro NORMAL_MODE]
gcode:
    SET_VELOCITY_LIMIT VELOCITY=400

[gcode_macro CRAZY_MODE]
gcode:
    SET_VELOCITY_LIMIT VELOCITY=800


[gcode_macro LOAD_FILAMENT_RESUME]	
gcode:
    LOAD_FILAMENT
    RESUME

[gcode_macro LOAD_FILAMENT]
gcode:
    ;M106999 S255
    M83                            ; set extruder to relative
    G1 E63 F3600                  ; quickly load filament to down bowden
    G1 E55 F200                    ; slower extrusion for hotend path
    G1 E-2 F4000                    ; slower extrusion for hotend path
    ;M106999 S0
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
    M83                            ; set extruder to relative
    G1 E5 F500                    ; extrude a little to soften tip
    G4 P1000 ; PAUSE
    G1 E-5 F4000                 ; retract
    G1 E-90 F1500                 ; retract filament completely

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    BASE_PAUSE
    SAVE_GCODE_STATE NAME=PAUSE_state
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=current_x VALUE={printer.toolhead.position.x|float}
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=current_y VALUE={printer.toolhead.position.y|float}
    SET_GCODE_VARIABLE MACRO=GLOBAL_VARS VARIABLE=current_z VALUE={printer.toolhead.position.z|float}
    {% set current_z = printer.toolhead.position.z|float %} ; grab current Z
    {% set park_z = printer["gcode_macro GLOBAL_VARS"].park_z %}
    M83 ;set extruder to relative
    _SET_SAFE_ACCEL    
    G1 E-2
    {% if current_z < printer.toolhead.axis_maximum.z|float-2 %} ; check z, move +10 if not less than 10 of max z
        {% set z_safe = current_z+2 %}
    {% else %}
        {% set z_safe = printer.toolhead.axis_maximum.z %}
    {% endif %}
    G0 Z{z_safe} F5000
    PARK_XY             
    SET_IDLE_TIMEOUT TIMEOUT=86000
    RESPOND TYPE=echo MSG="ENTERING PAUSED STATE"

[gcode_macro _WIPE_COMMAND]
description: Actual wipe routine - Hidden from console
;never run this macro directly from the console or gcode - bad things might happen.
gcode:
    M220 S100
    {% set park_x = printer["gcode_macro GLOBAL_VARS"].park_x %}
    {% set park_y = printer["gcode_macro GLOBAL_VARS"].park_y %}
    {% set park_z = printer["gcode_macro GLOBAL_VARS"].park_z %}
    {% set wipelength = 110 %} ; width of the pad + a few mm
    _SET_SAFE_ACCEL
    G90 ;absolute
    G0 X{park_x} Y{park_y} F30000
    G0 X{park_x+wipelength} Y{park_y} 
    G0 X{park_x} Y{park_y-1}
    G0 X{park_x+wipelength} Y{park_y-7}
    G0 X{park_x} Y{park_y}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    G1 E10 F500 ; pre-pump on resume
    G1 E-2 F4000                    ; reteract
    _WIPE_COMMAND
    G0 X{printer["gcode_macro GLOBAL_VARS"].current_x} Y{printer["gcode_macro GLOBAL_VARS"].current_y} F50000
    G0 Z{printer["gcode_macro GLOBAL_VARS"].current_z} F10000
    RESTORE_GCODE_STATE NAME=PAUSE_state
    SET_IDLE_TIMEOUT TIMEOUT=3600
    M83
    G1 E1.8 F4000 ; pre-pump on resume
    BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    PRINT_END
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[temperature_sensor TMC2209_X]
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF6
min_temp:0
max_temp:60

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 3
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	    {% set area_min_y = params.AREA_START.split(",")[1]|float %}
	    {% set area_max_x = params.AREA_END.split(",")[0]|float %}
	    {% set area_max_y = params.AREA_END.split(",")[1]|float %}
        {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
	
	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples=2 ;{probe_samples|int}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}
[gcode_macro MOVE_TEST]
gcode:
    {% set startTime = printer.system_stats.cputime %}
    {% set max_x = printer.toolhead.axis_maximum.x|float-5 %}
    {% set max_y = printer.toolhead.axis_maximum.y|float-5 %}
    RESPOND TYPE=command MSG="Starting Benchmark at: {startTime}"
    # micro box
    g90
    g1 x{max_x*0.48} y{max_y*0.48} z20 F200000
    g1 x{max_x*0.52}
    g1 y{max_y*0.52}
    g1 x{max_x*0.48}
    g1 y{max_y*0.48}
    g1 x{max_x*0.52} y{max_y*0.48}
    g1 x{max_x*0.48} y{max_y*0.48}
    g1 x{max_x*0.48} y{max_y*0.52}
    g1 x{max_x*0.52} y{max_y*0.48}
    g1 x{max_x*0.48} y{max_y*0.48}
    g1 x{max_x*0.52}
    g1 y{max_y*0.52}
    g1 x{max_x*0.48}
    g1 y{max_y*0.48}
    g1 x{max_x*0.52} y{max_y*0.52}
    g1 x{max_x*0.48} y{max_y*0.48}
    g1 x{max_x*0.48} y{max_y*0.52}
    g1 x{max_x*0.52} y{max_y*0.48}
    g1 x{max_x*0.48} y{max_y*0.48}
    g1 x{max_x*0.52}
    g1 y{max_y*0.52}
    g1 x{max_x*0.48}
    g1 y{max_y*0.48}
    g1 x{max_x*0.52} y{max_y*0.52}
    g1 x{max_x*0.48} y{max_y*0.48}
    g1 x{max_x*0.48} y{max_y*0.52}
    g1 x{max_x*0.52} y{max_y*0.48}
    g1 x{max_x*0.48} y{max_y*0.48}
    # small box
    g1 x{max_x*0.45} y{max_y*0.45} z20 F200000
    g1 x{max_x*0.55}
    g1 y{max_y*0.55}
    g1 x{max_x*0.45}
    g1 y{max_y*0.45}
    g1 x{max_x*0.55} y{max_y*0.45}
    g1 x{max_x*0.45} y{max_y*0.45}
    g1 x{max_x*0.45} y{max_y*0.55}
    g1 x{max_x*0.55} y{max_y*0.45}
    g1 x{max_x*0.45} y{max_y*0.45}
    g1 x{max_x*0.55}
    g1 y{max_y*0.55}
    g1 x{max_x*0.45}
    g1 y{max_y*0.45}
    g1 x{max_x*0.55} y{max_y*0.55}
    g1 x{max_x*0.45} y{max_y*0.45}
    g1 x{max_x*0.45} y{max_y*0.55}
    g1 x{max_x*0.55} y{max_y*0.45}
    g1 x{max_x*0.45} y{max_y*0.45}
    g1 x{max_x*0.55}
    g1 y{max_y*0.55}
    g1 x{max_x*0.45}
    g1 y{max_y*0.45}
    g1 x{max_x*0.55} y{max_y*0.55}
    g1 x{max_x*0.45} y{max_y*0.45}
    g1 x{max_x*0.45} y{max_y*0.55}
    g1 x{max_x*0.55} y{max_y*0.45}
    g1 x{max_x*0.45} y{max_y*0.45}
    # med box
    g1 x{max_x*0.30} y{max_y*0.30} z20 F200000
    g1 x{max_x*0.70}
    g1 y{max_y*0.70}
    g1 x{max_x*0.30}
    g1 y{max_y*0.30}
    g1 x{max_x*0.70} y{max_y*0.30}
    g1 x{max_x*0.30} y{max_y*0.30}
    g1 x{max_x*0.30} y{max_y*0.70}
    g1 x{max_x*0.70} y{max_y*0.30}
    g1 x{max_x*0.30} y{max_y*0.30}
    g1 x{max_x*0.70}
    g1 y{max_y*0.70}
    g1 x{max_x*0.30}
    g1 y{max_y*0.30}
    g1 x{max_x*0.70} y{max_y*0.70}
    g1 x{max_x*0.30} y{max_y*0.30}
    g1 x{max_x*0.30} y{max_y*0.70}
    g1 x{max_x*0.70} y{max_y*0.30}
    g1 x{max_x*0.30} y{max_y*0.30}
    g1 x{max_x*0.70}
    g1 y{max_y*0.70}
    g1 x{max_x*0.30}
    g1 y{max_y*0.30}
    g1 x{max_x*0.70} y{max_y*0.70}
    g1 x{max_x*0.30} y{max_y*0.30}
    g1 x{max_x*0.30} y{max_y*0.70}
    g1 x{max_x*0.70} y{max_y*0.30}
    g1 x{max_x*0.30} y{max_y*0.30}
    # large box
    g1 x5 y5 z20 F200000
    g1 x{max_x}
    g1 y{max_y}
    g1 x5
    g1 y5
    g1 x{max_x} y{max_y}
    g1 x5 y5
    g1 x5 y{max_y}
    g1 x{max_x} y5
    g1 x5 y5
    g1 x{max_x}
    g1 y{max_y}
    g1 x5
    g1 y5
    g1 x{max_x} y{max_y}
    g1 x5 y5
    g1 x5 y{max_y}
    g1 x{max_x} y5
    g1 x5 y5
    g1 x{max_x}
    g1 y{max_y}
    g1 x5
    g1 y5
    g1 x{max_x} y{max_y}
    g1 x5 y5
    g1 x5 y{max_y}
    g1 x{max_x} y5
    g1 x5 y5
    G4 P1000
    g90
    _END_BENCHMARK STARTTIME={startTime}

[gcode_macro _END_BENCHMARK]
gcode:
    {% set endTime = printer.system_stats.cputime %}
    {% set duration = endTime-params.STARTTIME|float %}
    RESPOND TYPE=command MSG="Benchmark: {1000/duration}"

[gcode_macro MOVE_TEST_SMALL]
gcode:
    {% set startTime = printer.system_stats.cputime %}
    {% set max_x = printer.toolhead.axis_maximum.x|float-5 %}
    {% set max_y = printer.toolhead.axis_maximum.y|float-5 %}
    RESPOND TYPE=command MSG="Starting Benchmark at: {startTime}"
    # micro box
    g90
    SET_VELOCITY_LIMIT ACCEL=1000 ACCEL_TO_DECEL=1000
    g1 x{max_x*0.495} y{max_y*0.495} z20 F200000
    g1 x{max_x*0.505}
    g1 y{max_y*0.505}
    g1 x{max_x*0.495}
    g1 y{max_y*0.495}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.505}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.505}
    g1 y{max_y*0.505}
    g1 x{max_x*0.495}
    g1 y{max_y*0.495}
    g1 x{max_x*0.505} y{max_y*0.505}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.505}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.505}
    g1 y{max_y*0.505}
    g1 x{max_x*0.495}
    g1 y{max_y*0.495}
    g1 x{max_x*0.505} y{max_y*0.505}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.505}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    G4 P1000
    g90
    SET_VELOCITY_LIMIT ACCEL=4000 ACCEL_TO_DECEL=4000
    g1 x{max_x*0.495} y{max_y*0.495} z20 F200000
    g1 x{max_x*0.505}
    g1 y{max_y*0.505}
    g1 x{max_x*0.495}
    g1 y{max_y*0.495}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.505}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.505}
    g1 y{max_y*0.505}
    g1 x{max_x*0.495}
    g1 y{max_y*0.495}
    g1 x{max_x*0.505} y{max_y*0.505}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.505}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.505}
    g1 y{max_y*0.505}
    g1 x{max_x*0.495}
    g1 y{max_y*0.495}
    g1 x{max_x*0.505} y{max_y*0.505}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.505}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    G4 P1000
    g90
    SET_VELOCITY_LIMIT ACCEL=25000 ACCEL_TO_DECEL=25000
    g1 x{max_x*0.495} y{max_y*0.495} z20 F200000
    g1 x{max_x*0.505}
    g1 y{max_y*0.505}
    g1 x{max_x*0.495}
    g1 y{max_y*0.495}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.505}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.505}
    g1 y{max_y*0.505}
    g1 x{max_x*0.495}
    g1 y{max_y*0.495}
    g1 x{max_x*0.505} y{max_y*0.505}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.505}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.505}
    g1 y{max_y*0.505}
    g1 x{max_x*0.495}
    g1 y{max_y*0.495}
    g1 x{max_x*0.505} y{max_y*0.505}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.505}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    G4 P1000
    g90
    SET_VELOCITY_LIMIT ACCEL=100000 ACCEL_TO_DECEL=100000
    g1 x{max_x*0.495} y{max_y*0.495} z20 F200000
    g1 x{max_x*0.505}
    g1 y{max_y*0.505}
    g1 x{max_x*0.495}
    g1 y{max_y*0.495}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.505}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.505}
    g1 y{max_y*0.505}
    g1 x{max_x*0.495}
    g1 y{max_y*0.495}
    g1 x{max_x*0.505} y{max_y*0.505}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.505}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.505}
    g1 y{max_y*0.505}
    g1 x{max_x*0.495}
    g1 y{max_y*0.495}
    g1 x{max_x*0.505} y{max_y*0.505}
    g1 x{max_x*0.495} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.505}
    g1 x{max_x*0.505} y{max_y*0.495}
    g1 x{max_x*0.495} y{max_y*0.495}
    G4 P1000
    g90
    _END_BENCHMARK STARTTIME={startTime}



[menu __main __octoprint]
type: list
name: OctoPrint
enable: false

[menu __main __sdcard]
type: vsdlist
enable: {('virtual_sdcard' in printer)}
name: SD Card
enable: false

[menu __main __temp __hotend0_target]
type: input
enable: {('extruder' in printer) and ('extruder' in printer.heaters.available_heaters)}
name: {"Nzl:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
gcode: M104 T0 S{'%.0f' % menu.input}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [enclosure_heat]
#*# control = pid
#*# pid_kp = 100.843
#*# pid_ki = 0.550
#*# pid_kd = 303.337
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 35.967
#*# pid_ki = 0.203
#*# pid_kd = 2500
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.048750, 0.026875, 0.093750, 0.099375
#*# 	  -0.092187, -0.016875, 0.041250, 0.050000
#*# 	  -0.119062, -0.060312, -0.001875, 0.020938
#*# 	  -0.123750, -0.059062, -0.009375, 0.025625
#*# tension = 0.2
#*# min_x = 76.85
#*# algo = lagrange
#*# y_count = 4
#*# mesh_y_pps = 2
#*# min_y = 72.83
#*# x_count = 4
#*# max_y = 227.16
#*# mesh_x_pps = 2
#*# max_x = 223.14
#*#
#*# [probe]
#*# z_offset = 0.925
